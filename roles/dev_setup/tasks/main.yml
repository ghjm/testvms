---

- name: 'Create dev user'
  user:
    name: "{{ dev_user }}"
    password: "{{ dev_password }}"
    comment: "{{ dev_user_full_name }}"
    update_password: on_create
  no_log: True

- name: 'Create user ssh folder'
  file:
    path: "/home/{{ dev_user }}/.ssh"
    state: directory
    mode: 0700
    owner: "{{ dev_user }}"
    group: "{{ dev_user }}"
    setype: "ssh_home_t"

- name: 'Configure ssh public key'
  copy:
    content: "{{ ssh_key }}"
    dest: "/home/{{ dev_user }}/.ssh/id_rsa.pub"
    mode: 0700
    force: no
    owner: "{{ dev_user }}"
    group: "{{ dev_user }}"
    setype: "ssh_home_t"

- name: 'Configure ssh private key'
  copy:
    content: "{{ ssh_private_key }}"
    dest: "/home/{{ dev_user }}/.ssh/id_rsa"
    mode: 0700
    force: no
    owner: "{{ dev_user }}"
    group: "{{ dev_user }}"
    setype: "ssh_home_t"

- name: 'Configure sudoers'
  lineinfile:
    dest: "/etc/sudoers"
    state: present
    regexp: "^{{ dev_user }}"
    line: "{{ dev_user }} ALL=(ALL) NOPASSWD: ALL"

- name: 'Configure dot files for dev user'
  template:
    src: "{{ item }}"
    dest: "/home/{{ dev_user }}/.{{ item }}"
    mode: 0640
    force: no
    owner: "{{ dev_user }}"
    group: "{{ dev_user }}"
    setype: "user_home_t"
  with_items:
    - "gitconfig"
    - "vimrc"

- include: 'CentOS-7.yml'
  when: ansible_distribution == 'CentOS' and ansible_distribution_major_version == '7'

- include: 'Ubuntu.yml'
  when: ansible_distribution == 'Ubuntu'
 
- name: 'Clone bash-git-prompt'
  git:
    repo: "https://github.com/magicmonty/bash-git-prompt.git"
    dest: "/home/{{ dev_user }}/.bash-git-prompt"
    depth: 1
    update: no

- name: 'Install bash-git-prompt in path'
  lineinfile:
    dest: "/home/{{ dev_user }}/.bashrc"
    line: "{{ item }}"
  with_items:
    - "source ~/.bash-git-prompt/gitprompt.sh"
    - "export GIT_PROMPT_ONLY_IN_REPO=1"

- name: Add docker group
  group:
    name: docker
    state: present
    
- name: Add dev user to docker group
  user:
    name: "{{ dev_user }}"
    groups: "docker"
    append: yes

- name: Allow docker group to talk to docker daemon
  file:
    path: "/var/run/docker.sock"
    group: "docker"

- name: 'PyCharm folders'
  file:
    path: "/home/{{ dev_user }}/.PyCharm2016.2/config/{{ item }}"
    mode: 0775
    owner: "{{ dev_user }}"
    group: "{{ dev_user }}"
    recurse: yes
    state: directory
  with_items:
    - "keymaps"
    - "options"

- name: 'PyCharm settings'
  copy:
    src: "{{ item.src }}"
    dest: "/home/{{ dev_user }}/.PyCharm2016.2/config/{{ item.dest }}"
    mode: 0775
    force: no
    owner: "{{ dev_user }}"
    group: "{{ dev_user }}"
  with_items:
    - src: "Graham.xml"
      dest: "keymaps/Graham.xml"
    - src: "keymap.xml"
      dest: "options/keymap.xml"

